the ``1-my_list`` module
======================

Using ``print_sorted``
-------------------

>>> MyList = __import__('1-my_list').MyList

empty list
>>> l = MyList()
>>> l.print_sorted()
[]

sort list when is unsorted
>>> l = MyList()
>>> l.append(5)
>>> l.append(2)
>>> l.append(7)
>>> l.append(6)
>>> l.append(8)
>>> l.print_sorted()
[2, 5, 6, 7, 8]

-int
>>> l = MyList()
>>> l.append(-5)
>>> l.append(-2)
>>> l.append(-7)
>>> l.append(-6)
>>> l.append(-8)
>>> l.print_sorted()
[-8, -7, -6, -5, -2]

only zero
>>> l = MyList()
>>> l.append(0)
>>> l.append(0)
>>> l.append(0)
>>> l.append(0)
>>> l.append(0)
>>> l.print_sorted()
[0, 0, 0, 0, 0]

only one int element
>>> l = MyList()
>>> l.append(2)
>>> l.print_sorted()
[2]

check if is subclcass
>>> issubclass(MyList, list)
True

with nan
>>> l = MyList(float('nan'))
Traceback (most recent call last):
TypeError: 'float' object is not iterable

with string
>>> l = MyList()
>>> l.append(1)
>>> l.append('k')
>>> l.print_sorted()
Traceback (most recent call last):
TypeError: unorderable types: str() < int()

other1
>>> l = MyList()
>>> l.append(1)
>>> l.append(4)
>>> l.append(2)
>>> l.append(3)
>>> l.append(5)
>>> l.print_sorted()
[1, 2, 3, 4, 5]

other2
>>> l = MyList(3.5)
Traceback (most recent call last):
TypeError: 'float' object is not iterable

sort character
>>> l = MyList('k')
>>> l.print_sorted()
['k']
